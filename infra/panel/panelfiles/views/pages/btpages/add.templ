package btpages

import (
	"github.com/CSPF-Founder/iva/panel/enums"
	"github.com/CSPF-Founder/iva/panel/views/helpers"
	"strconv"
	"time"
)

type AddBugtrackData struct {
	Target      string
	AlertTitle  string
	Details     string
	Severity    enums.Severity
	Poc         string
	Remediation string
	Status      enums.BugTrackStatus
	TodayDate   time.Time
}

// To choose priority based on severity
func isMatchingPriority(severity enums.Severity, prioritization enums.Prioritization) bool {
	switch {
	case (severity == enums.SeverityCritical || severity == enums.SeverityHigh) && prioritization == enums.PrioritizationHigh:
		return true
	case severity == enums.SeverityMedium && prioritization == enums.PrioritizationMedium:
		return true
	case severity == enums.SeverityLow && prioritization == enums.PrioritizationLow:
		return true
	default:
		return false
	}
}

templ AddBugtrack(todayDate time.Time, data AddBugtrackData) {
	<input type="hidden" id="today_date" value={ helpers.FormatNormalDate(todayDate, "2006-01-02") }/>
	<div class="row pt-3">
		<div class="col-lg-12 col-sm-12 pb-3 fpt14">
			<h3 class="font-weight-bold">BugTrack</h3>
		</div>
	</div>
	<div class="card mb-4">
		<div class="card-header text-center">
			<h5>Add BugTrack</h5>
			<hr/>
		</div>
		<div class="card-body">
			<form id="add-bugtrack-form" method="POST" autocomplete="off" enctype="multipart/form-data">
				<div class="row">
					<div class="col-lg-2"></div>
					<div class="col-lg-8 col-sm-12">
						<div class="form-group p-2" id="dullinput">
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">URL/IP/Application</span>
								<input
									class="form-control"
									type="text"
									id="target"
									name="target"
									value={ data.Target }
									placeholder="Url/IP/Application"
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Alert Title</span>
								<input class="form-control" type="text" id="alert_title" name="alert_title" value={ data.AlertTitle } placeholder="Alert Title"/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Severity</span>
								<select class="form-control form-select" id="severity" name="severity">
									for key, value := range enums.BTSeverityMap {
										if key == enums.BugTrackSeverity(data.Severity) {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Details/Impact</span>
								<textarea
									class="form-control"
									id="details"
									name="details"
									rows="5"
									placeholder="Details/Impact"
								>{ data.Details }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Replication/Proof</span>
								<textarea
									class="form-control"
									id="poc"
									name="poc"
									rows="4"
									placeholder="Replication/Proof"
								>{ data.Poc }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Remediation</span>
								<textarea
									class="form-control"
									id="remediation"
									rows="4"
									name="remediation"
									placeholder="Remediation"
								>{ data.Remediation }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Remarks</span>
								<textarea
									class="form-control"
									id="remarks"
									name="remarks"
									rows="2"
									placeholder="Remarks"
								></textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Found Date</span>
								<input
									class="form-control datepicker"
									type="text"
									id="found_date"
									name="found_date"
									value={ helpers.FormatNormalDate(todayDate, "2006-01-02") }
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Revalidated Date</span>
								<input
									class="form-control Datepicker"
									type="text"
									id="revalidated_date"
									name="revalidated_date"
									value={ helpers.FormatNormalDate(todayDate, "2006-01-02") }
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Prioritization</span>
								<select class="form-control form-select" id="prioritization" name="prioritization">
									for key, value := range enums.PrioritizationMap {
										if isMatchingPriority(data.Severity, key) {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">To Be Fixed By</span>
								<input
									class="form-control"
									type="text"
									name="to_be_fixed_by"
									id="to_be_fixed_by"
									value=""
									placeholder="To Be Fixed By (Optional)"
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Status</span>
								<select class="form-control" id="status" name="status">
									for key, value := range enums.BTStatusMap {
										if key == data.Status {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-3">
								<button type="submit" class="checkout-button btn btn-primary center"><b>Add</b></button>
							</div>
						</div>
					</div>
				</div>
			</form>
		</div>
	</div>
	<script type="module" src={ helpers.AssetPath("app/bug_track.js") }></script>
}
