package btpages

import (
	"github.com/CSPF-Founder/iva/panel/enums"
	"github.com/CSPF-Founder/iva/panel/models"
	"github.com/CSPF-Founder/iva/panel/views/helpers"
	"strconv"
)

templ BugtrackDetails(pageTitle string, data models.BugTrack) {
	<div class="row pt-3">
		<div class="col-lg-12 col-sm-12 pb-3 fpt14">
			<h3 class="font-weight-bold">{ pageTitle }</h3>
		</div>
	</div>
	<div class="card mb-4">
		<div class="card-header text-center">
			<h5>BugTrack Details</h5>
			<hr/>
		</div>
		<div class="card-body">
			<form id="update-bugtrack-form" method="POST" autocomplete="off" enctype="multipart/form-data">
				<input type="hidden" id="bug-id" name="id" value={ strconv.FormatUint(data.ID, 10) }/>
				<div class="row">
					<div class="col-lg-2"></div>
					<div class="col-lg-8 col-sm-12">
						<div class="form-group p-2" id="dullinput">
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">URL/IP/Application</span>
								<input
									class="form-control read-only-field"
									style="background-color: #c9c9c9 !important;"
									readonly
									type="text"
									id="target"
									value={ data.Target }
									placeholder="Target"
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Alert Title</span>
								<input
									class="form-control "
									type="text"
									id="alert_title"
									value={ data.AlertTitle }
									placeholder="Alert Title"
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Severity</span>
								<select class="form-control form-select" id="severity" name="severity">
									for key, value := range enums.BTSeverityMap {
										if key == enums.BugTrackSeverity(data.Severity) {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Details/Impact</span>
								<textarea
									class="form-control"
									name="details"
									id="details"
									placeholder="Details"
								>{ data.Details }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Replication/Proof</span>
								<textarea
									class="form-control "
									name="poc"
									rows="4"
									id="poc"
									placeholder="Replication/Proof"
								>{ data.Poc }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Remediation</span>
								<textarea
									class="form-control "
									rows="4"
									name="remediation"
									id="remediation"
									placeholder="Remediation"
								>{ data.Remediation }</textarea>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Found Date</span>
								<input
									class="form-control read-only-field"
									style="background-color: #c9c9c9 !important;"
									readonly
									type="text"
									id="found_date"
									name="found_date"
									value={ data.FormatedFoundDate }
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Revalidated Date</span>
								<input
									class="form-control read-only-field"
									style="background-color: #c9c9c9 !important;"
									readonly
									type="text"
									id="revalidated_date"
									name="revalidated_date"
									value={ data.FormatedRevalidatedDate }
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Prioritization</span>
								<select class="form-control form-select" id="prioritization" name="prioritization">
									for key, value := range enums.PrioritizationMap {
										if data.Prioritization == key {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">To Be Fixed By</span>
								<input
									class="form-control"
									type="text"
									name="to_be_fixed_by"
									id="to_be_fixed_by"
									value={ data.ToBeFixedBy }
									placeholder="To Be Fixed By (Should be filled by Customer)"
								/>
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Status</span>
								<select class="form-control form-select" id="status" name="status">
									for key, value := range enums.BTStatusMap {
										if key == data.Status {
											<option value={ strconv.Itoa(int(key)) } selected>
												{ value }
											</option>
										} else {
											<option value={ strconv.Itoa(int(key)) }>
												{ value }
											</option>
										}
									}
								</select>
							</div>
							<div class="input-group mt-2">
								if len(data.Remarks) > 0 {
									<span style="width: 20%;" class="input-group-text">Remarks History</span>
									<textarea
										class="form-control read-only-field"
										style="background-color: #c9c9c9 !important;"
										readonly
										id="remarks_history"
										placeholder="Remarks history"
									>{ data.Remarks }</textarea>
								}
							</div>
							<div class="input-group mt-2">
								<span style="width: 20%;" class="input-group-text">Add Remarks</span>
								<textarea
									class="form-control"
									id="new_remarks"
									name="new_remarks"
									placeholder="Add New Remarks"
								></textarea>
							</div>
							<div class="input-group mt-3">
								<button
									type="button"
									id="update-bugtrack"
									class="update-button btn btn-primary"
								><b>Update</b></button>
							</div>
						</div>
					</div>
				</div>
			</form>
		</div>
	</div>
	<script type="module" src={ helpers.AssetPath("app/bug_track.js") }></script>
}
